// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Site.Data;

#nullable disable

namespace Site.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250713212106_SeedProjectsWithSkills")]
    partial class SeedProjectsWithSkills
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ProjectSkills", (string)null);

                    b.HasData(
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 1
                        },
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 2
                        },
                        new
                        {
                            ProjectsId = 1,
                            SkillsId = 3
                        },
                        new
                        {
                            ProjectsId = 2,
                            SkillsId = 2
                        },
                        new
                        {
                            ProjectsId = 2,
                            SkillsId = 1
                        });
                });

            modelBuilder.Entity("Site.Entites.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Completed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DemoLink")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("GitHubLink")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Completed = true,
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DemoLink = "https://demo.walkerplatform.com",
                            Description = "A platform for Walkers to create and share projects.",
                            GitHubLink = "https://github.com/walkercreator/walkerplatform",
                            ImageUrl = "/images/projects/walker-creator.png",
                            Name = "Walker Creator Platform"
                        },
                        new
                        {
                            Id = 2,
                            Completed = false,
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DemoLink = "https://unityshowcase.com",
                            Description = "An open-source site built to demo Unity-powered collaborations.",
                            GitHubLink = "https://github.com/unityshowcase/demo",
                            ImageUrl = "/images/projects/unity-showcase.png",
                            Name = "Unity Showcase"
                        });
                });

            modelBuilder.Entity("Site.Entites.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Skills", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Backend",
                            IconUrl = "",
                            Name = "C#"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Frontend",
                            IconUrl = "",
                            Name = "React"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Database",
                            IconUrl = "",
                            Name = "SQL Server"
                        });
                });

            modelBuilder.Entity("ProjectSkill", b =>
                {
                    b.HasOne("Site.Entites.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Site.Entites.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
